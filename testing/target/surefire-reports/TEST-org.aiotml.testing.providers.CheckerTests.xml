<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report.xsd" name="org.aiotml.testing.providers.CheckerTests" time="8.183" tests="400" errors="0" skipped="400" failures="0">
  <properties>
    <property name="sun.desktop" value="windows"/>
    <property name="awt.toolkit" value="sun.awt.windows.WToolkit"/>
    <property name="java.specification.version" value="9"/>
    <property name="file.encoding.pkg" value="sun.io"/>
    <property name="sun.cpu.isalist" value="amd64"/>
    <property name="sun.jnu.encoding" value="GBK"/>
    <property name="java.class.path" value="D:\Program Files\eclipse\plugins\org.eclipse.m2e.maven.runtime_1.11.0.20190220-2117\jars\plexus-classworlds-2.5.2.jar"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="user.variant" value=""/>
    <property name="java.vendor.url" value="http://java.oracle.com/"/>
    <property name="user.timezone" value="Asia/Shanghai"/>
    <property name="os.name" value="Windows 10"/>
    <property name="java.vm.specification.version" value="9"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="user.country" value="CN"/>
    <property name="sun.boot.library.path" value="C:\Program Files\Java\jdk-9.0.1\bin"/>
    <property name="sun.java.command" value="org.codehaus.plexus.classworlds.launcher.Launcher -B install"/>
    <property name="jdk.debug" value="release"/>
    <property name="maven.home" value="F:\MasterLab\iot\AiotML-master\testing\EMBEDDED"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="C:\Users\hm"/>
    <property name="user.language" value="zh"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.home" value="C:\Program Files\Java\jdk-9.0.1"/>
    <property name="file.separator" value="\"/>
    <property name="java.vm.compressedOopsMode" value="32-bit"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.awt.graphicsenv" value="sun.awt.Win32GraphicsEnvironment"/>
    <property name="user.script" value=""/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="java.runtime.version" value="9.0.1+11"/>
    <property name="user.name" value="hm"/>
    <property name="path.separator" value=";"/>
    <property name="os.version" value="10.0"/>
    <property name="java.runtime.name" value="Java(TM) SE Runtime Environment"/>
    <property name="file.encoding" value="GBK"/>
    <property name="guice.disable.misplaced.annotation.check" value="true"/>
    <property name="java.vm.name" value="Java HotSpot(TM) 64-Bit Server VM"/>
    <property name="java.vendor.url.bug" value="http://bugreport.java.com/bugreport/"/>
    <property name="java.io.tmpdir" value="C:\Users\hm\AppData\Local\Temp\"/>
    <property name="java.version" value="9.0.1"/>
    <property name="user.dir" value="F:\MasterLab\iot\AiotML-master\testing"/>
    <property name="os.arch" value="amd64"/>
    <property name="maven.multiModuleProjectDirectory" value="F:\MasterLab\iot\AiotML-master\testing"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="java.awt.printerjob" value="sun.awt.windows.WPrinterJob"/>
    <property name="sun.os.patch.level" value=""/>
    <property name="java.library.path" value="C:\Program Files\Java\jdk-9.0.1\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_211/bin/server;C:/Program Files/Java/jre1.8.0_211/bin;C:/Program Files/Java/jre1.8.0_211/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;%JAVA_HOME%\bin;D:\Git\cmd;D:\LLVM\bin;D:\Go\bin;D:\Program Files\MATLAB\R2018a\runtime\win64;D:\Program Files\MATLAB\R2018a\bin;C:\Python27\Scripts;C:\Python27;C:\WINDOWS\System32\OpenSSH\;D:\Program Files\Microsoft VS Code\bin;C:\Program Files\ISC BIND 9\bin;D:\Program Files\PuTTY\;C:\Users\hm\AppData\Local\Microsoft\WindowsApps;F:\MasterLab\go-ethereum\bin;D:\texlive\2018\bin\win32;;D:\Program Files\eclipse;;."/>
    <property name="java.vm.info" value="mixed mode"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="java.vm.version" value="9.0.1+11"/>
    <property name="classworlds.conf" value="D:\Program Files\eclipse\workspace\.metadata\.plugins\org.eclipse.m2e.launching\launches\m2conf7804091219083338409.tmp"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="java.class.version" value="53.0"/>
  </properties>
  <testcase name="NodeJS [testAssign]" classname="testAssign [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Java [testAssign]" classname="testAssign [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Posix [testAssign]" classname="testAssign [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="PosixMT [testAssign]" classname="testAssign [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Go [testAssign]" classname="testAssign [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="NodeJS [testAssign3]" classname="testAssign3 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Java [testAssign3]" classname="testAssign3 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Posix [testAssign3]" classname="testAssign3 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="PosixMT [testAssign3]" classname="testAssign3 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Go [testAssign3]" classname="testAssign3 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="NodeJS [testAssign2]" classname="testAssign2 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Java [testAssign2]" classname="testAssign2 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Posix [testAssign2]" classname="testAssign2 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="PosixMT [testAssign2]" classname="testAssign2 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Go [testAssign2]" classname="testAssign2 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="NodeJS [testAssignConfig]" classname="testAssignConfig [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Java [testAssignConfig]" classname="testAssignConfig [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Posix [testAssignConfig]" classname="testAssignConfig [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="PosixMT [testAssignConfig]" classname="testAssignConfig [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Go [testAssignConfig]" classname="testAssignConfig [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="NodeJS [testAssign4]" classname="testAssign4 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Java [testAssign4]" classname="testAssign4 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Posix [testAssign4]" classname="testAssign4 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="PosixMT [testAssign4]" classname="testAssign4 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Go [testAssign4]" classname="testAssign4 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="NodeJS [testAssignConfig3]" classname="testAssignConfig3 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Java [testAssignConfig3]" classname="testAssignConfig3 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Posix [testAssignConfig3]" classname="testAssignConfig3 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="PosixMT [testAssignConfig3]" classname="testAssignConfig3 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Go [testAssignConfig3]" classname="testAssignConfig3 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="NodeJS [testAssignConfig2]" classname="testAssignConfig2 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Java [testAssignConfig2]" classname="testAssignConfig2 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Posix [testAssignConfig2]" classname="testAssignConfig2 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="PosixMT [testAssignConfig2]" classname="testAssignConfig2 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Go [testAssignConfig2]" classname="testAssignConfig2 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="NodeJS [testCheckAbstractFunction]" classname="testCheckAbstractFunction [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Java [testCheckAbstractFunction]" classname="testCheckAbstractFunction [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Posix [testCheckAbstractFunction]" classname="testCheckAbstractFunction [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="PosixMT [testCheckAbstractFunction]" classname="testCheckAbstractFunction [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Go [testCheckAbstractFunction]" classname="testCheckAbstractFunction [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="NodeJS [testAssignConfig4]" classname="testAssignConfig4 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Java [testAssignConfig4]" classname="testAssignConfig4 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Posix [testAssignConfig4]" classname="testAssignConfig4 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="PosixMT [testAssignConfig4]" classname="testAssignConfig4 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Go [testAssignConfig4]" classname="testAssignConfig4 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="NodeJS [testCheckAbstractFunction2]" classname="testCheckAbstractFunction2 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Java [testCheckAbstractFunction2]" classname="testCheckAbstractFunction2 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Posix [testCheckAbstractFunction2]" classname="testCheckAbstractFunction2 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="PosixMT [testCheckAbstractFunction2]" classname="testCheckAbstractFunction2 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Go [testCheckAbstractFunction2]" classname="testCheckAbstractFunction2 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="NodeJS [testCheckAbstractFunction1]" classname="testCheckAbstractFunction1 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Java [testCheckAbstractFunction1]" classname="testCheckAbstractFunction1 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Posix [testCheckAbstractFunction1]" classname="testCheckAbstractFunction1 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="PosixMT [testCheckAbstractFunction1]" classname="testCheckAbstractFunction1 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Go [testCheckAbstractFunction1]" classname="testCheckAbstractFunction1 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="NodeJS [testCheckArray]" classname="testCheckArray [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Java [testCheckArray]" classname="testCheckArray [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Posix [testCheckArray]" classname="testCheckArray [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="PosixMT [testCheckArray]" classname="testCheckArray [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Go [testCheckArray]" classname="testCheckArray [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="NodeJS [testCheckAbstractFunction3]" classname="testCheckAbstractFunction3 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Java [testCheckAbstractFunction3]" classname="testCheckAbstractFunction3 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Posix [testCheckAbstractFunction3]" classname="testCheckAbstractFunction3 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="PosixMT [testCheckAbstractFunction3]" classname="testCheckAbstractFunction3 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Go [testCheckAbstractFunction3]" classname="testCheckAbstractFunction3 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="NodeJS [testCheckArray2]" classname="testCheckArray2 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Java [testCheckArray2]" classname="testCheckArray2 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Posix [testCheckArray2]" classname="testCheckArray2 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="PosixMT [testCheckArray2]" classname="testCheckArray2 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Go [testCheckArray2]" classname="testCheckArray2 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="NodeJS [testCheckArray10]" classname="testCheckArray10 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Java [testCheckArray10]" classname="testCheckArray10 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Posix [testCheckArray10]" classname="testCheckArray10 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="PosixMT [testCheckArray10]" classname="testCheckArray10 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Go [testCheckArray10]" classname="testCheckArray10 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="NodeJS [testCheckArray4]" classname="testCheckArray4 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Java [testCheckArray4]" classname="testCheckArray4 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Posix [testCheckArray4]" classname="testCheckArray4 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="PosixMT [testCheckArray4]" classname="testCheckArray4 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Go [testCheckArray4]" classname="testCheckArray4 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="NodeJS [testCheckArray3]" classname="testCheckArray3 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Java [testCheckArray3]" classname="testCheckArray3 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Posix [testCheckArray3]" classname="testCheckArray3 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="PosixMT [testCheckArray3]" classname="testCheckArray3 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Go [testCheckArray3]" classname="testCheckArray3 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="NodeJS [testCheckArray6]" classname="testCheckArray6 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Java [testCheckArray6]" classname="testCheckArray6 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Posix [testCheckArray6]" classname="testCheckArray6 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="PosixMT [testCheckArray6]" classname="testCheckArray6 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Go [testCheckArray6]" classname="testCheckArray6 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="NodeJS [testCheckArray5]" classname="testCheckArray5 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Java [testCheckArray5]" classname="testCheckArray5 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Posix [testCheckArray5]" classname="testCheckArray5 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="PosixMT [testCheckArray5]" classname="testCheckArray5 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Go [testCheckArray5]" classname="testCheckArray5 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="NodeJS [testCheckArray8]" classname="testCheckArray8 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Java [testCheckArray8]" classname="testCheckArray8 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Posix [testCheckArray8]" classname="testCheckArray8 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="PosixMT [testCheckArray8]" classname="testCheckArray8 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Go [testCheckArray8]" classname="testCheckArray8 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="NodeJS [testCheckArray7]" classname="testCheckArray7 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Java [testCheckArray7]" classname="testCheckArray7 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Posix [testCheckArray7]" classname="testCheckArray7 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="PosixMT [testCheckArray7]" classname="testCheckArray7 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Go [testCheckArray7]" classname="testCheckArray7 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="NodeJS [testCheckCast]" classname="testCheckCast [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Java [testCheckCast]" classname="testCheckCast [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Posix [testCheckCast]" classname="testCheckCast [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="PosixMT [testCheckCast]" classname="testCheckCast [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Go [testCheckCast]" classname="testCheckCast [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="NodeJS [testCheckArray9]" classname="testCheckArray9 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Java [testCheckArray9]" classname="testCheckArray9 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Posix [testCheckArray9]" classname="testCheckArray9 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="PosixMT [testCheckArray9]" classname="testCheckArray9 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Go [testCheckArray9]" classname="testCheckArray9 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="NodeJS [testCheckEnumeration2]" classname="testCheckEnumeration2 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Java [testCheckEnumeration2]" classname="testCheckEnumeration2 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Posix [testCheckEnumeration2]" classname="testCheckEnumeration2 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="PosixMT [testCheckEnumeration2]" classname="testCheckEnumeration2 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Go [testCheckEnumeration2]" classname="testCheckEnumeration2 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="NodeJS [testCheckEnumeration]" classname="testCheckEnumeration [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Java [testCheckEnumeration]" classname="testCheckEnumeration [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Posix [testCheckEnumeration]" classname="testCheckEnumeration [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="PosixMT [testCheckEnumeration]" classname="testCheckEnumeration [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Go [testCheckEnumeration]" classname="testCheckEnumeration [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="NodeJS [testCheckEnumeration4]" classname="testCheckEnumeration4 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Java [testCheckEnumeration4]" classname="testCheckEnumeration4 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Posix [testCheckEnumeration4]" classname="testCheckEnumeration4 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="PosixMT [testCheckEnumeration4]" classname="testCheckEnumeration4 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Go [testCheckEnumeration4]" classname="testCheckEnumeration4 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="NodeJS [testCheckEnumeration3]" classname="testCheckEnumeration3 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Java [testCheckEnumeration3]" classname="testCheckEnumeration3 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Posix [testCheckEnumeration3]" classname="testCheckEnumeration3 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="PosixMT [testCheckEnumeration3]" classname="testCheckEnumeration3 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Go [testCheckEnumeration3]" classname="testCheckEnumeration3 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="NodeJS [testCheckFor]" classname="testCheckFor [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Java [testCheckFor]" classname="testCheckFor [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Posix [testCheckFor]" classname="testCheckFor [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="PosixMT [testCheckFor]" classname="testCheckFor [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Go [testCheckFor]" classname="testCheckFor [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="NodeJS [testCheckEnumeration5]" classname="testCheckEnumeration5 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Java [testCheckEnumeration5]" classname="testCheckEnumeration5 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Posix [testCheckEnumeration5]" classname="testCheckEnumeration5 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="PosixMT [testCheckEnumeration5]" classname="testCheckEnumeration5 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Go [testCheckEnumeration5]" classname="testCheckEnumeration5 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="NodeJS [testCheckFor3]" classname="testCheckFor3 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Java [testCheckFor3]" classname="testCheckFor3 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Posix [testCheckFor3]" classname="testCheckFor3 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="PosixMT [testCheckFor3]" classname="testCheckFor3 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Go [testCheckFor3]" classname="testCheckFor3 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="NodeJS [testCheckForIndex2]" classname="testCheckForIndex2 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Java [testCheckForIndex2]" classname="testCheckForIndex2 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Posix [testCheckForIndex2]" classname="testCheckForIndex2 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="PosixMT [testCheckForIndex2]" classname="testCheckForIndex2 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Go [testCheckForIndex2]" classname="testCheckForIndex2 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="NodeJS [testCheckFor2]" classname="testCheckFor2 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Java [testCheckFor2]" classname="testCheckFor2 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Posix [testCheckFor2]" classname="testCheckFor2 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="PosixMT [testCheckFor2]" classname="testCheckFor2 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Go [testCheckFor2]" classname="testCheckFor2 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="NodeJS [testCheckFunctionCalls]" classname="testCheckFunctionCalls [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Java [testCheckFunctionCalls]" classname="testCheckFunctionCalls [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Posix [testCheckFunctionCalls]" classname="testCheckFunctionCalls [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="PosixMT [testCheckFunctionCalls]" classname="testCheckFunctionCalls [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Go [testCheckFunctionCalls]" classname="testCheckFunctionCalls [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="NodeJS [testCheckForIndex]" classname="testCheckForIndex [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Java [testCheckForIndex]" classname="testCheckForIndex [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Posix [testCheckForIndex]" classname="testCheckForIndex [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="PosixMT [testCheckForIndex]" classname="testCheckForIndex [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Go [testCheckForIndex]" classname="testCheckForIndex [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="NodeJS [testCheckFunctionReturn]" classname="testCheckFunctionReturn [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Java [testCheckFunctionReturn]" classname="testCheckFunctionReturn [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Posix [testCheckFunctionReturn]" classname="testCheckFunctionReturn [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="PosixMT [testCheckFunctionReturn]" classname="testCheckFunctionReturn [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Go [testCheckFunctionReturn]" classname="testCheckFunctionReturn [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="NodeJS [testCheckFunctionCalls2]" classname="testCheckFunctionCalls2 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Java [testCheckFunctionCalls2]" classname="testCheckFunctionCalls2 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Posix [testCheckFunctionCalls2]" classname="testCheckFunctionCalls2 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="PosixMT [testCheckFunctionCalls2]" classname="testCheckFunctionCalls2 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Go [testCheckFunctionCalls2]" classname="testCheckFunctionCalls2 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="NodeJS [testCheckFunctionReturn3]" classname="testCheckFunctionReturn3 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Java [testCheckFunctionReturn3]" classname="testCheckFunctionReturn3 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Posix [testCheckFunctionReturn3]" classname="testCheckFunctionReturn3 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="PosixMT [testCheckFunctionReturn3]" classname="testCheckFunctionReturn3 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Go [testCheckFunctionReturn3]" classname="testCheckFunctionReturn3 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="NodeJS [testCheckFunctionReturn2]" classname="testCheckFunctionReturn2 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Java [testCheckFunctionReturn2]" classname="testCheckFunctionReturn2 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Posix [testCheckFunctionReturn2]" classname="testCheckFunctionReturn2 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="PosixMT [testCheckFunctionReturn2]" classname="testCheckFunctionReturn2 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Go [testCheckFunctionReturn2]" classname="testCheckFunctionReturn2 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="NodeJS [testCheckFunctionReturn5]" classname="testCheckFunctionReturn5 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Java [testCheckFunctionReturn5]" classname="testCheckFunctionReturn5 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Posix [testCheckFunctionReturn5]" classname="testCheckFunctionReturn5 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="PosixMT [testCheckFunctionReturn5]" classname="testCheckFunctionReturn5 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Go [testCheckFunctionReturn5]" classname="testCheckFunctionReturn5 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="NodeJS [testCheckFunctionReturn4]" classname="testCheckFunctionReturn4 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Java [testCheckFunctionReturn4]" classname="testCheckFunctionReturn4 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Posix [testCheckFunctionReturn4]" classname="testCheckFunctionReturn4 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="PosixMT [testCheckFunctionReturn4]" classname="testCheckFunctionReturn4 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Go [testCheckFunctionReturn4]" classname="testCheckFunctionReturn4 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="NodeJS [testCheckFunctionReturn7]" classname="testCheckFunctionReturn7 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Java [testCheckFunctionReturn7]" classname="testCheckFunctionReturn7 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Posix [testCheckFunctionReturn7]" classname="testCheckFunctionReturn7 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="PosixMT [testCheckFunctionReturn7]" classname="testCheckFunctionReturn7 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Go [testCheckFunctionReturn7]" classname="testCheckFunctionReturn7 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="NodeJS [testCheckFunctionReturn6]" classname="testCheckFunctionReturn6 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Java [testCheckFunctionReturn6]" classname="testCheckFunctionReturn6 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Posix [testCheckFunctionReturn6]" classname="testCheckFunctionReturn6 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="PosixMT [testCheckFunctionReturn6]" classname="testCheckFunctionReturn6 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Go [testCheckFunctionReturn6]" classname="testCheckFunctionReturn6 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="NodeJS [testCheckFunctionReturn9]" classname="testCheckFunctionReturn9 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Java [testCheckFunctionReturn9]" classname="testCheckFunctionReturn9 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Posix [testCheckFunctionReturn9]" classname="testCheckFunctionReturn9 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="PosixMT [testCheckFunctionReturn9]" classname="testCheckFunctionReturn9 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Go [testCheckFunctionReturn9]" classname="testCheckFunctionReturn9 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="NodeJS [testCheckFunctionReturn8]" classname="testCheckFunctionReturn8 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Java [testCheckFunctionReturn8]" classname="testCheckFunctionReturn8 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Posix [testCheckFunctionReturn8]" classname="testCheckFunctionReturn8 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="PosixMT [testCheckFunctionReturn8]" classname="testCheckFunctionReturn8 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Go [testCheckFunctionReturn8]" classname="testCheckFunctionReturn8 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="NodeJS [testCheckStateMachine2]" classname="testCheckStateMachine2 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Java [testCheckStateMachine2]" classname="testCheckStateMachine2 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Posix [testCheckStateMachine2]" classname="testCheckStateMachine2 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="PosixMT [testCheckStateMachine2]" classname="testCheckStateMachine2 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Go [testCheckStateMachine2]" classname="testCheckStateMachine2 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="NodeJS [testCheckImport]" classname="testCheckImport [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Java [testCheckImport]" classname="testCheckImport [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Posix [testCheckImport]" classname="testCheckImport [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="PosixMT [testCheckImport]" classname="testCheckImport [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Go [testCheckImport]" classname="testCheckImport [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="NodeJS [testCheckStateMachine4]" classname="testCheckStateMachine4 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Java [testCheckStateMachine4]" classname="testCheckStateMachine4 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Posix [testCheckStateMachine4]" classname="testCheckStateMachine4 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="PosixMT [testCheckStateMachine4]" classname="testCheckStateMachine4 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Go [testCheckStateMachine4]" classname="testCheckStateMachine4 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="NodeJS [testCheckStateMachine3]" classname="testCheckStateMachine3 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Java [testCheckStateMachine3]" classname="testCheckStateMachine3 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Posix [testCheckStateMachine3]" classname="testCheckStateMachine3 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="PosixMT [testCheckStateMachine3]" classname="testCheckStateMachine3 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Go [testCheckStateMachine3]" classname="testCheckStateMachine3 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="NodeJS [testCheckStateMachine6]" classname="testCheckStateMachine6 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Java [testCheckStateMachine6]" classname="testCheckStateMachine6 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Posix [testCheckStateMachine6]" classname="testCheckStateMachine6 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="PosixMT [testCheckStateMachine6]" classname="testCheckStateMachine6 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Go [testCheckStateMachine6]" classname="testCheckStateMachine6 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="NodeJS [testCheckStateMachine5]" classname="testCheckStateMachine5 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Java [testCheckStateMachine5]" classname="testCheckStateMachine5 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Posix [testCheckStateMachine5]" classname="testCheckStateMachine5 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="PosixMT [testCheckStateMachine5]" classname="testCheckStateMachine5 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Go [testCheckStateMachine5]" classname="testCheckStateMachine5 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="NodeJS [testDuplicateDatatypes]" classname="testDuplicateDatatypes [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Java [testDuplicateDatatypes]" classname="testDuplicateDatatypes [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Posix [testDuplicateDatatypes]" classname="testDuplicateDatatypes [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="PosixMT [testDuplicateDatatypes]" classname="testDuplicateDatatypes [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Go [testDuplicateDatatypes]" classname="testDuplicateDatatypes [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="NodeJS [testConnector]" classname="testConnector [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Java [testConnector]" classname="testConnector [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Posix [testConnector]" classname="testConnector [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="PosixMT [testConnector]" classname="testConnector [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Go [testConnector]" classname="testConnector [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="NodeJS [testDuplicateFunction2]" classname="testDuplicateFunction2 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Java [testDuplicateFunction2]" classname="testDuplicateFunction2 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Posix [testDuplicateFunction2]" classname="testDuplicateFunction2 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="PosixMT [testDuplicateFunction2]" classname="testDuplicateFunction2 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Go [testDuplicateFunction2]" classname="testDuplicateFunction2 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="NodeJS [testDuplicateFunction]" classname="testDuplicateFunction [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Java [testDuplicateFunction]" classname="testDuplicateFunction [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Posix [testDuplicateFunction]" classname="testDuplicateFunction [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="PosixMT [testDuplicateFunction]" classname="testDuplicateFunction [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Go [testDuplicateFunction]" classname="testDuplicateFunction [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="NodeJS [testDuplicateMessages]" classname="testDuplicateMessages [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Java [testDuplicateMessages]" classname="testDuplicateMessages [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Posix [testDuplicateMessages]" classname="testDuplicateMessages [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="PosixMT [testDuplicateMessages]" classname="testDuplicateMessages [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Go [testDuplicateMessages]" classname="testDuplicateMessages [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="NodeJS [testDuplicateInstances]" classname="testDuplicateInstances [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Java [testDuplicateInstances]" classname="testDuplicateInstances [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Posix [testDuplicateInstances]" classname="testDuplicateInstances [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="PosixMT [testDuplicateInstances]" classname="testDuplicateInstances [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Go [testDuplicateInstances]" classname="testDuplicateInstances [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="NodeJS [testDuplicatePort]" classname="testDuplicatePort [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Java [testDuplicatePort]" classname="testDuplicatePort [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Posix [testDuplicatePort]" classname="testDuplicatePort [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="PosixMT [testDuplicatePort]" classname="testDuplicatePort [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Go [testDuplicatePort]" classname="testDuplicatePort [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="NodeJS [testDuplicateMessages2]" classname="testDuplicateMessages2 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Java [testDuplicateMessages2]" classname="testDuplicateMessages2 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Posix [testDuplicateMessages2]" classname="testDuplicateMessages2 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="PosixMT [testDuplicateMessages2]" classname="testDuplicateMessages2 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Go [testDuplicateMessages2]" classname="testDuplicateMessages2 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="NodeJS [testDuplicateSessions]" classname="testDuplicateSessions [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Java [testDuplicateSessions]" classname="testDuplicateSessions [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Posix [testDuplicateSessions]" classname="testDuplicateSessions [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="PosixMT [testDuplicateSessions]" classname="testDuplicateSessions [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Go [testDuplicateSessions]" classname="testDuplicateSessions [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="NodeJS [testDuplicateProperties]" classname="testDuplicateProperties [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Java [testDuplicateProperties]" classname="testDuplicateProperties [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Posix [testDuplicateProperties]" classname="testDuplicateProperties [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="PosixMT [testDuplicateProperties]" classname="testDuplicateProperties [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Go [testDuplicateProperties]" classname="testDuplicateProperties [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="NodeJS [testReadonly]" classname="testReadonly [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Java [testReadonly]" classname="testReadonly [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Posix [testReadonly]" classname="testReadonly [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="PosixMT [testReadonly]" classname="testReadonly [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Go [testReadonly]" classname="testReadonly [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="NodeJS [testDuplicateStates]" classname="testDuplicateStates [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Java [testDuplicateStates]" classname="testDuplicateStates [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Posix [testDuplicateStates]" classname="testDuplicateStates [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="PosixMT [testDuplicateStates]" classname="testDuplicateStates [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Go [testDuplicateStates]" classname="testDuplicateStates [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="NodeJS [testReadonly3]" classname="testReadonly3 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Java [testReadonly3]" classname="testReadonly3 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Posix [testReadonly3]" classname="testReadonly3 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="PosixMT [testReadonly3]" classname="testReadonly3 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Go [testReadonly3]" classname="testReadonly3 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="NodeJS [testReadonly2]" classname="testReadonly2 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Java [testReadonly2]" classname="testReadonly2 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Posix [testReadonly2]" classname="testReadonly2 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="PosixMT [testReadonly2]" classname="testReadonly2 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Go [testReadonly2]" classname="testReadonly2 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="NodeJS [testReadonly5]" classname="testReadonly5 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Java [testReadonly5]" classname="testReadonly5 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Posix [testReadonly5]" classname="testReadonly5 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="PosixMT [testReadonly5]" classname="testReadonly5 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Go [testReadonly5]" classname="testReadonly5 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="NodeJS [testReadonly4]" classname="testReadonly4 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Java [testReadonly4]" classname="testReadonly4 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Posix [testReadonly4]" classname="testReadonly4 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="PosixMT [testReadonly4]" classname="testReadonly4 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Go [testReadonly4]" classname="testReadonly4 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="NodeJS [testReadonly7]" classname="testReadonly7 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Java [testReadonly7]" classname="testReadonly7 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Posix [testReadonly7]" classname="testReadonly7 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="PosixMT [testReadonly7]" classname="testReadonly7 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Go [testReadonly7]" classname="testReadonly7 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="NodeJS [testReadonly6]" classname="testReadonly6 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Java [testReadonly6]" classname="testReadonly6 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Posix [testReadonly6]" classname="testReadonly6 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="PosixMT [testReadonly6]" classname="testReadonly6 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Go [testReadonly6]" classname="testReadonly6 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="NodeJS [testType10]" classname="testType10 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Java [testType10]" classname="testType10 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Posix [testType10]" classname="testType10 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="PosixMT [testType10]" classname="testType10 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Go [testType10]" classname="testType10 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="NodeJS [testType1]" classname="testType1 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Java [testType1]" classname="testType1 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Posix [testType1]" classname="testType1 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="PosixMT [testType1]" classname="testType1 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Go [testType1]" classname="testType1 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="NodeJS [testType2]" classname="testType2 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Java [testType2]" classname="testType2 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Posix [testType2]" classname="testType2 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="PosixMT [testType2]" classname="testType2 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Go [testType2]" classname="testType2 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="NodeJS [testType11]" classname="testType11 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Java [testType11]" classname="testType11 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Posix [testType11]" classname="testType11 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="PosixMT [testType11]" classname="testType11 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Go [testType11]" classname="testType11 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="NodeJS [testType4]" classname="testType4 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Java [testType4]" classname="testType4 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Posix [testType4]" classname="testType4 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="PosixMT [testType4]" classname="testType4 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Go [testType4]" classname="testType4 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="NodeJS [testType3]" classname="testType3 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Java [testType3]" classname="testType3 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Posix [testType3]" classname="testType3 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="PosixMT [testType3]" classname="testType3 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Go [testType3]" classname="testType3 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="NodeJS [testType6]" classname="testType6 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Java [testType6]" classname="testType6 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Posix [testType6]" classname="testType6 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="PosixMT [testType6]" classname="testType6 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Go [testType6]" classname="testType6 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="NodeJS [testType5]" classname="testType5 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Java [testType5]" classname="testType5 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Posix [testType5]" classname="testType5 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="PosixMT [testType5]" classname="testType5 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Go [testType5]" classname="testType5 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="NodeJS [testType8]" classname="testType8 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Java [testType8]" classname="testType8 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Posix [testType8]" classname="testType8 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="PosixMT [testType8]" classname="testType8 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Go [testType8]" classname="testType8 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="NodeJS [testType7]" classname="testType7 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Java [testType7]" classname="testType7 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Posix [testType7]" classname="testType7 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="PosixMT [testType7]" classname="testType7 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Go [testType7]" classname="testType7 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="NodeJS [testTypeCfg]" classname="testTypeCfg [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Java [testTypeCfg]" classname="testTypeCfg [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Posix [testTypeCfg]" classname="testTypeCfg [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="PosixMT [testTypeCfg]" classname="testTypeCfg [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Go [testTypeCfg]" classname="testTypeCfg [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="NodeJS [testType9]" classname="testType9 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Java [testType9]" classname="testType9 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Posix [testType9]" classname="testType9 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="PosixMT [testType9]" classname="testType9 [Checker]" time="0">
    <skipped/>
  </testcase>
  <testcase name="Go [testType9]" classname="testType9 [Checker]" time="0">
    <skipped/>
  </testcase>
</testsuite>